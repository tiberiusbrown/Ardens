macro(bin2c OUTPUT_C OUTPUT_H BINFILE SYMBOL)
    # Create header for C file
    file(WRITE ${OUTPUT_C} "/* Autogenerated by bin2c */\n\n")
    file(APPEND ${OUTPUT_C} "#include <stdint.h>\n\n")

    # Create header of H file
    file(WRITE ${OUTPUT_H} "/* Autogenerated by bin2c */\n\n")
    file(APPEND ${OUTPUT_H} "#pragma once\n")
    file(APPEND ${OUTPUT_H} "#include <stdint.h>\n\n")

    # Get short filename
    string(REGEX MATCH "([^/]+)$" INPUT_FILE ${BINFILE})
    # Replace filename spaces & extension separator for C compatibility
    string(REGEX REPLACE "\\.| |-" "_" INPUT_FILE ${INPUT_FILE})
    # Convert to lower case
    string(TOLOWER ${INPUT_FILE} INPUT_FILE)
    # Read hex data from file
    file(READ ${BINFILE} filedata HEX)
    # Convert hex data for C compatibility
    string(REGEX REPLACE "([0-9a-f][0-9a-f])" "0x\\1," filedata ${filedata})
    # Append data to c file
    file(APPEND ${OUTPUT_C} "uint8_t ${SYMBOL}[] = {${filedata}};\n\nuint32_t ${SYMBOL}_size = sizeof(${SYMBOL});\n\n")
    # Append extern definitions to h file
    file(APPEND ${OUTPUT_H} "extern uint8_t ${SYMBOL}[];\n\nextern uint32_t ${SYMBOL}_size;\n\n")
endmacro()
